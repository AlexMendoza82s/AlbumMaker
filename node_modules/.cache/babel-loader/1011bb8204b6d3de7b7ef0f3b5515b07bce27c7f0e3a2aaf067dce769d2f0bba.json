{"ast":null,"code":"var _jsxFileName = \"C:\\\\AlexMendozaBC\\\\React\\\\Proyectos\\\\ProyectoReact\\\\AlbumMaker\\\\frontend\\\\src\\\\components\\\\Matrix.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Matrix = () => {\n  _s();\n  const [matrixData, setMatrixData] = useState([['', '', ''], ['', '', ''], ['', '', '']]);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const matrixRef = useRef(null);\n  const handleDragStart = (rowIndex, columnIndex) => {\n    setDraggedItem({\n      row: rowIndex,\n      column: columnIndex\n    });\n  };\n  const handleDragEnd = () => {\n    setDraggedItem(null);\n  };\n  const handleDrop = (targetRowIndex, targetColumnIndex) => {\n    const updatedMatrix = [...matrixData];\n    const draggedItemValue = updatedMatrix[draggedItem.row][draggedItem.column];\n    updatedMatrix[draggedItem.row][draggedItem.column] = '';\n    updatedMatrix[targetRowIndex][targetColumnIndex] = draggedItemValue;\n    setMatrixData(updatedMatrix);\n    setDraggedItem(null);\n  };\n  useEffect(() => {\n    const resizeHandler = () => {\n      const matrixContainer = matrixRef.current;\n      if (matrixContainer) {\n        const containerWidth = matrixContainer.offsetWidth;\n        const itemSize = containerWidth / matrixData.length;\n        matrixContainer.style.setProperty('--item-size', `${itemSize}px`);\n      }\n    };\n    resizeHandler();\n    window.addEventListener('resize', resizeHandler);\n    return () => {\n      window.removeEventListener('resize', resizeHandler);\n    };\n  }, [matrixData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matrix\",\n    ref: matrixRef,\n    children: matrixData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((item, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        draggable: true,\n        onDragStart: () => handleDragStart(rowIndex, columnIndex),\n        onDragEnd: handleDragEnd,\n        onDrop: () => handleDrop(rowIndex, columnIndex),\n        onDragOver: e => e.preventDefault(),\n        children: item\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Matrix, \"DasmovDTIAUvFS9hHffojfOT+Gs=\");\n_c = Matrix;\nexport default Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Matrix","_s","matrixData","setMatrixData","draggedItem","setDraggedItem","matrixRef","handleDragStart","rowIndex","columnIndex","row","column","handleDragEnd","handleDrop","targetRowIndex","targetColumnIndex","updatedMatrix","draggedItemValue","resizeHandler","matrixContainer","current","containerWidth","offsetWidth","itemSize","length","style","setProperty","window","addEventListener","removeEventListener","className","ref","children","map","item","draggable","onDragStart","onDragEnd","onDrop","onDragOver","e","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/AlexMendozaBC/React/Proyectos/ProyectoReact/AlbumMaker/frontend/src/components/Matrix.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Matrix = () => {\r\n  const [matrixData, setMatrixData] = useState([\r\n    ['', '', ''],\r\n    ['', '', ''],\r\n    ['', '', ''],\r\n  ]);\r\n  const [draggedItem, setDraggedItem] = useState(null);\r\n  const matrixRef = useRef(null);\r\n\r\n  const handleDragStart = (rowIndex, columnIndex) => {\r\n    setDraggedItem({ row: rowIndex, column: columnIndex });\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    setDraggedItem(null);\r\n  };\r\n\r\n  const handleDrop = (targetRowIndex, targetColumnIndex) => {\r\n    const updatedMatrix = [...matrixData];\r\n    const draggedItemValue = updatedMatrix[draggedItem.row][draggedItem.column];\r\n\r\n    updatedMatrix[draggedItem.row][draggedItem.column] = '';\r\n    updatedMatrix[targetRowIndex][targetColumnIndex] = draggedItemValue;\r\n\r\n    setMatrixData(updatedMatrix);\r\n    setDraggedItem(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const resizeHandler = () => {\r\n      const matrixContainer = matrixRef.current;\r\n      if (matrixContainer) {\r\n        const containerWidth = matrixContainer.offsetWidth;\r\n        const itemSize = containerWidth / matrixData.length;\r\n        matrixContainer.style.setProperty('--item-size', `${itemSize}px`);\r\n      }\r\n    };\r\n\r\n    resizeHandler();\r\n    window.addEventListener('resize', resizeHandler);\r\n    return () => {\r\n      window.removeEventListener('resize', resizeHandler);\r\n    };\r\n  }, [matrixData]);\r\n\r\n  return (\r\n    <div className=\"matrix\" ref={matrixRef}>\r\n      {matrixData.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"row\">\r\n          {row.map((item, columnIndex) => (\r\n            <div\r\n              key={columnIndex}\r\n              className=\"item\"\r\n              draggable={true}\r\n              onDragStart={() => handleDragStart(rowIndex, columnIndex)}\r\n              onDragEnd={handleDragEnd}\r\n              onDrop={() => handleDrop(rowIndex, columnIndex)}\r\n              onDragOver={(e) => e.preventDefault()}\r\n            >\r\n              {item}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matrix;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}