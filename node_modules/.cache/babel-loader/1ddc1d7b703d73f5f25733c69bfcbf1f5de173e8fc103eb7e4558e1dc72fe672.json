{"ast":null,"code":"var _jsxFileName = \"C:\\\\AlexMendozaBC\\\\React\\\\Proyectos\\\\ProyectoReact\\\\AlbumMaker\\\\frontend\\\\src\\\\components\\\\Matrix.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Matrix = () => {\n  _s();\n  const [matrixData, setMatrixData] = useState([['', '', ''], ['', '', ''], ['', '', '']]);\n  const [highlightedItem, setHighlightedItem] = useState(null);\n  const [draggedItemPosition, setDraggedItemPosition] = useState(null);\n  const [showAlert, setShowAlert] = useState(false);\n  const handleDrop = (targetRowIndex, targetColumnIndex, draggedItem) => {\n    const updatedMatrix = [...matrixData];\n    if (draggedItemPosition && (draggedItemPosition.row !== targetRowIndex || draggedItemPosition.column !== targetColumnIndex)) {\n      const {\n        row: prevRow,\n        column: prevColumn\n      } = draggedItemPosition;\n      updatedMatrix[prevRow][prevColumn] = '';\n    }\n    if (!updatedMatrix[targetRowIndex][targetColumnIndex]) {\n      updatedMatrix[targetRowIndex][targetColumnIndex] = draggedItem;\n      setMatrixData(updatedMatrix);\n      setDraggedItemPosition(null);\n    } else {\n      setShowAlert(true);\n    }\n  };\n  const handleDragStart = (rowIndex, columnIndex) => {\n    setDraggedItemPosition({\n      row: rowIndex,\n      column: columnIndex\n    });\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDragEnter = (e, rowIndex, columnIndex) => {\n    e.preventDefault();\n    setHighlightedItem({\n      rowIndex,\n      columnIndex\n    });\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setHighlightedItem(null);\n  };\n  const handleDragDrop = (e, rowIndex, columnIndex) => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const image = event.target.result;\n      handleDrop(rowIndex, columnIndex, image);\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleAlertClose = () => {\n    setShowAlert(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"La posici\\xF3n seleccionada ya est\\xE1 ocupada.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix\",\n      children: matrixData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((item, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `item ${highlightedItem && highlightedItem.row === rowIndex && highlightedItem.column === columnIndex ? 'highlighted' : ''}`,\n          style: {\n            width: '100%',\n            height: '200px'\n          },\n          onDragOver: handleDragOver,\n          onDragEnter: e => handleDragEnter(e, rowIndex, columnIndex),\n          onDragLeave: handleDragLeave,\n          onDrop: e => handleDragDrop(e, rowIndex, columnIndex),\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '100%',\n              height: '100%'\n            },\n            className: `card ${item ? 'has-image' : ''} ${highlightedItem && highlightedItem.row === rowIndex && highlightedItem.column === columnIndex ? 'highlighted' : ''}`,\n            children: item && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-img-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item,\n                alt: \"Image\",\n                className: \"card-img\",\n                style: {\n                  objectFit: 'cover',\n                  width: '100%',\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Matrix, \"FoOrhlfZeH55W6ihhtRU/aDEBos=\");\n_c = Matrix;\nexport default Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Matrix","_s","matrixData","setMatrixData","highlightedItem","setHighlightedItem","draggedItemPosition","setDraggedItemPosition","showAlert","setShowAlert","handleDrop","targetRowIndex","targetColumnIndex","draggedItem","updatedMatrix","row","column","prevRow","prevColumn","handleDragStart","rowIndex","columnIndex","handleDragOver","e","preventDefault","handleDragEnter","handleDragLeave","handleDragDrop","file","dataTransfer","files","reader","FileReader","onload","event","image","target","result","readAsDataURL","handleAlertClose","children","className","role","fileName","_jsxFileName","lineNumber","columnNumber","map","item","style","width","height","onDragOver","onDragEnter","onDragLeave","onDrop","src","alt","objectFit","_c","$RefreshReg$"],"sources":["C:/AlexMendozaBC/React/Proyectos/ProyectoReact/AlbumMaker/frontend/src/components/Matrix.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Matrix = () => {\r\n  const [matrixData, setMatrixData] = useState([\r\n    ['', '', ''],\r\n    ['', '', ''],\r\n    ['', '', ''],\r\n  ]);\r\n  const [highlightedItem, setHighlightedItem] = useState(null);\r\n  const [draggedItemPosition, setDraggedItemPosition] = useState(null);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleDrop = (targetRowIndex, targetColumnIndex, draggedItem) => {\r\n    const updatedMatrix = [...matrixData];\r\n\r\n    if (\r\n      draggedItemPosition &&\r\n      (draggedItemPosition.row !== targetRowIndex ||\r\n        draggedItemPosition.column !== targetColumnIndex)\r\n    ) {\r\n      const { row: prevRow, column: prevColumn } = draggedItemPosition;\r\n      updatedMatrix[prevRow][prevColumn] = '';\r\n    }\r\n\r\n    if (!updatedMatrix[targetRowIndex][targetColumnIndex]) {\r\n      updatedMatrix[targetRowIndex][targetColumnIndex] = draggedItem;\r\n      setMatrixData(updatedMatrix);\r\n      setDraggedItemPosition(null);\r\n    } else {\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  const handleDragStart = (rowIndex, columnIndex) => {\r\n    setDraggedItemPosition({ row: rowIndex, column: columnIndex });\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDragEnter = (e, rowIndex, columnIndex) => {\r\n    e.preventDefault();\r\n    setHighlightedItem({ rowIndex, columnIndex });\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    setHighlightedItem(null);\r\n  };\r\n\r\n  const handleDragDrop = (e, rowIndex, columnIndex) => {\r\n    e.preventDefault();\r\n    const file = e.dataTransfer.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      const image = event.target.result;\r\n      handleDrop(rowIndex, columnIndex, image);\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setShowAlert(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showAlert && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          La posición seleccionada ya está ocupada.\r\n        </div>\r\n      )}\r\n      <div className=\"matrix\">\r\n        {matrixData.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"row\">\r\n            {row.map((item, columnIndex) => (\r\n              <div\r\n                key={columnIndex}\r\n                className={`item ${\r\n                  highlightedItem &&\r\n                  highlightedItem.row === rowIndex &&\r\n                  highlightedItem.column === columnIndex\r\n                    ? 'highlighted'\r\n                    : ''\r\n                }`}\r\n                style={{ width: '100%', height: '200px' }}\r\n                onDragOver={handleDragOver}\r\n                onDragEnter={(e) => handleDragEnter(e, rowIndex, columnIndex)}\r\n                onDragLeave={handleDragLeave}\r\n                onDrop={(e) => handleDragDrop(e, rowIndex, columnIndex)}\r\n              >\r\n                <Card\r\n                  style={{ width: '100%', height: '100%' }}\r\n                  className={`card ${\r\n                    item ? 'has-image' : ''\r\n                  } ${\r\n                    highlightedItem &&\r\n                    highlightedItem.row === rowIndex &&\r\n                    highlightedItem.column === columnIndex\r\n                      ? 'highlighted'\r\n                      : ''\r\n                  }`}\r\n                >\r\n                  {item && (\r\n                    <div className=\"card-img-wrapper\">\r\n                      <img\r\n                        src={item}\r\n                        alt=\"Image\"\r\n                        className=\"card-img\"\r\n                        style={{ objectFit: 'cover', width: '100%', height: '100%' }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Card>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matrix;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}