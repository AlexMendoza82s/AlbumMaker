{"ast":null,"code":"var _jsxFileName = \"C:\\\\AlexMendozaBC\\\\React\\\\Proyectos\\\\ProyectoReact\\\\AlbumMaker\\\\frontend\\\\src\\\\components\\\\Matrix.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Matrix = () => {\n  _s();\n  const [matrixData, setMatrixData] = useState([['', '', ''], ['', '', ''], ['', '', '']]);\n  const handleDrop = (targetRowIndex, targetColumnIndex, draggedItem) => {\n    const updatedMatrix = [...matrixData];\n    updatedMatrix[targetRowIndex][targetColumnIndex] = draggedItem;\n    setMatrixData(updatedMatrix);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDragEnter = e => {\n    e.preventDefault();\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n  };\n  const handleDragDrop = (e, rowIndex, columnIndex) => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const image = event.target.result;\n      handleDrop(rowIndex, columnIndex, image);\n    };\n    reader.readAsDataURL(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matrix\",\n    children: matrixData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((item, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        onDragOver: handleDragOver,\n        onDragEnter: handleDragEnter,\n        onDragLeave: handleDragLeave,\n        onDrop: e => handleDragDrop(e, rowIndex, columnIndex),\n        children: item && /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item,\n            style: {\n              objectFit: 'cover',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Matrix, \"6PEWT+I1WJezwv2492Y0JCP3EIE=\");\n_c = Matrix;\nexport default Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Matrix","_s","matrixData","setMatrixData","handleDrop","targetRowIndex","targetColumnIndex","draggedItem","updatedMatrix","handleDragOver","e","preventDefault","handleDragEnter","handleDragLeave","handleDragDrop","rowIndex","columnIndex","file","dataTransfer","files","reader","FileReader","onload","event","image","target","result","readAsDataURL","className","children","map","row","item","onDragOver","onDragEnter","onDragLeave","onDrop","style","width","height","Img","variant","src","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/AlexMendozaBC/React/Proyectos/ProyectoReact/AlbumMaker/frontend/src/components/Matrix.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Matrix = () => {\r\n  const [matrixData, setMatrixData] = useState([\r\n    ['', '', ''],\r\n    ['', '', ''],\r\n    ['', '', ''],\r\n  ]);\r\n\r\n  const handleDrop = (targetRowIndex, targetColumnIndex, draggedItem) => {\r\n    const updatedMatrix = [...matrixData];\r\n    updatedMatrix[targetRowIndex][targetColumnIndex] = draggedItem;\r\n    setMatrixData(updatedMatrix);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDragEnter = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDragDrop = (e, rowIndex, columnIndex) => {\r\n    e.preventDefault();\r\n    const file = e.dataTransfer.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      const image = event.target.result;\r\n      handleDrop(rowIndex, columnIndex, image);\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <div className=\"matrix\">\r\n      {matrixData.map((row, rowIndex) => (\r\n        <div key={rowIndex} className=\"row\">\r\n          {row.map((item, columnIndex) => (\r\n            <div\r\n              key={columnIndex}\r\n              className=\"item\"\r\n              onDragOver={handleDragOver}\r\n              onDragEnter={handleDragEnter}\r\n              onDragLeave={handleDragLeave}\r\n              onDrop={(e) => handleDragDrop(e, rowIndex, columnIndex)}\r\n            >\r\n              {item && (\r\n                <Card style={{ width: '100%', height: '100%' }}>\r\n                  <Card.Img variant=\"top\" src={item} style={{ objectFit: 'cover', height: '100%' }} />\r\n                </Card>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matrix;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,sCAAsC;AAC7C,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAC3C,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CACb,CAAC;EAEF,MAAMQ,UAAU,GAAGA,CAACC,cAAc,EAAEC,iBAAiB,EAAEC,WAAW,KAAK;IACrE,MAAMC,aAAa,GAAG,CAAC,GAAGN,UAAU,CAAC;IACrCM,aAAa,CAACH,cAAc,CAAC,CAACC,iBAAiB,CAAC,GAAGC,WAAW;IAC9DJ,aAAa,CAACK,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,eAAe,GAAIF,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAME,eAAe,GAAIH,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMG,cAAc,GAAGA,CAACJ,CAAC,EAAEK,QAAQ,EAAEC,WAAW,KAAK;IACnDN,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMM,IAAI,GAAGP,CAAC,CAACQ,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC;IACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAE/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;MACzB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;MACjCtB,UAAU,CAACW,QAAQ,EAAEC,WAAW,EAAEQ,KAAK,CAAC;IAC1C,CAAC;IAEDJ,MAAM,CAACO,aAAa,CAACV,IAAI,CAAC;EAC5B,CAAC;EAED,oBACElB,OAAA;IAAK6B,SAAS,EAAC,QAAQ;IAAAC,QAAA,EACpB3B,UAAU,CAAC4B,GAAG,CAAC,CAACC,GAAG,EAAEhB,QAAQ,kBAC5BhB,OAAA;MAAoB6B,SAAS,EAAC,KAAK;MAAAC,QAAA,EAChCE,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,EAAEhB,WAAW,kBACzBjB,OAAA;QAEE6B,SAAS,EAAC,MAAM;QAChBK,UAAU,EAAExB,cAAe;QAC3ByB,WAAW,EAAEtB,eAAgB;QAC7BuB,WAAW,EAAEtB,eAAgB;QAC7BuB,MAAM,EAAG1B,CAAC,IAAKI,cAAc,CAACJ,CAAC,EAAEK,QAAQ,EAAEC,WAAW,CAAE;QAAAa,QAAA,EAEvDG,IAAI,iBACHjC,OAAA,CAACF,IAAI;UAACwC,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAO,CAAE;UAAAV,QAAA,eAC7C9B,OAAA,CAACF,IAAI,CAAC2C,GAAG;YAACC,OAAO,EAAC,KAAK;YAACC,GAAG,EAAEV,IAAK;YAACK,KAAK,EAAE;cAAEM,SAAS,EAAE,OAAO;cAAEJ,MAAM,EAAE;YAAO;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF;MACP,GAXI/B,WAAW;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACN;IAAC,GAhBMhC,QAAQ;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9C,EAAA,CA9DID,MAAM;AAAAgD,EAAA,GAANhD,MAAM;AAgEZ,eAAeA,MAAM;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}